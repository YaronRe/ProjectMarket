@model ProjectMarket.Models.Project

@{
    ViewData["Title"] = Model.Name + " | פרטי פרויקט";
}

@section Styles {
    <link href="@Url.Content("~/css/project-details.css")" rel="stylesheet" type="text/css" />
}


<section style="margin-top: 30px;">
    <div class="row">
        <div class="col-md-9">
            <header class="project-header">
                <div class="project-header-bg">
                    <h2>@Html.DisplayFor(model => model.Name)</h2>
                </div>
            </header>
            <div class="project-info">
                <h3>תיאור הפרויקט</h3>
                @Html.DisplayFor(model => model.Description)
                <h3>@Html.DisplayNameFor(model => model.Price)</h3>
                @Html.DisplayFor(model => model.Price)
                <h3>מוסד אקדמי</h3>
                @Html.DisplayFor(model => model.AcademicInstitute.Name)
                <h3>תחום לימוד</h3>
                @Html.DisplayFor(model => model.FieldOfStudy.Name)
                <h3>מחיר</h3>
                @Html.DisplayFor(model => model.Price) &#8362;
                <h3>מחיר במטבעות אחרים, נכון לתאריך <span id="OtherCurrencyDate">טוען...</span></h3>
                <span id="PriceInUSD">טוען...</span> $<br />
                <span id="PriceInEUR">טוען...</span> &euro;<br />
                <h3>כתובת לבירורים</h3>
                <div id="details_address_name">@Html.DisplayFor(model => model.Address)</div>
                <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">
                    קנה
                </button>
                <a href="https://twitter.com/intent/tweet?text=קלטו%20איזה%20פרוירט%20מגניב!" target="_blank" class="btn btn-primary btn-lg">צייץ על זה בטוויטר!</a>
                <hr />
                <h2>אולי תאהב גם...</h2>
                @if (((IEnumerable<Project>)ViewData["suggested"]) == null || ((IEnumerable<Project>)ViewData["suggested"]).Count() == 0)
                {
                    <span>לא נמצאו תוצאות</span>
                }
                else
                {
                    <ul>
                        @foreach (Project project in ((IEnumerable<Project>)ViewData["suggested"]))
                        {
                            <li>
                                <a asp-controller="Projects" asp-action="Details" asp-route-id="@project.Id">@project.Name</a>
                            </li>
                        }
                    </ul>
                }
                <div id="map"></div>
            </div>
        </div>
        <div class="col-md-3">
            <aside class="well well-lg">
                <img src="~/images/Student.jpg" class="img-responsive img-circle" />
                <hr />
                <div class="text-center">
                    <strong>@Html.DisplayFor(model => model.Owner.FullName)</strong>
                </div>
            </aside>
        </div>
    </div>

</section>


<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">קניית פרוייקט</h4>
            </div>
            <div class="modal-body">
                <p>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name) </p>
                @Html.DisplayNameFor(model => model.Price): @Html.DisplayFor(model => model.Price)

            </div>
            <div class="modal-footer">
                <a asp-controller="Sales" asp-action="Buy" asp-route-id="@Model.Id" class="btn btn-primary">קנה</a>
                <button type="button" class="btn btn-default" data-dismiss="modal">סגור</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
    var priceInILS = @Html.DisplayFor(model => model.Price);
    $.get("http://data.fixer.io/api/latest?access_key=9f0fd7c399b893f3a48c4d3708571da1&symbols=USD,ILS&format=1", (data) => {
        $("#OtherCurrencyDate").text(data.date);
        console.log(data);
        // Next line is because the value in data.rates.ILS represents the amount of 1 EUR in ILS
        var priceInEUR = priceInILS / data.rates.ILS;
        $("#PriceInEUR").text(priceInEUR.toFixed(2));
        $("#PriceInUSD").text((priceInEUR * data.rates.USD).toFixed(2));
    });
    </script>
}

<script>
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">


    var geocoder;
    var map;
    var address = document.getElementById("details_address_name").textContent;

    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(-34.397, 150.644);
        var myOptions = {
            zoom: 16,
            center: latlng,
            mapTypeControl: true,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
            },
            navigationControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("map"), myOptions);
        if (geocoder) {
            geocoder.geocode({
                'address': address
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                        map.setCenter(results[0].geometry.location);

                        var infowindow = new google.maps.InfoWindow({
                            content: '<b>' + address + '</b>',
                            size: new google.maps.Size(150, 50)
                        });

                        var marker = new google.maps.Marker({
                            position: results[0].geometry.location,
                            map: map,
                            title: address
                        });
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });

                    } else {
                        alert("No results found");
                    }
                } else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }
    }


</script>
<script src="https://maps.googleapis.com/maps/api/js?key=&libraries=places&language=iw&callback=initialize"
        async defer></script>

