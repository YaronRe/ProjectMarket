@model IEnumerable<ProjectMarket.Models.FieldOfStudy>

@{
    ViewData["Title"] = "ניהול תחומים";
}

@section Scripts{
    <script src="https://d3js.org/d3.v3.min.js" charset="utf-8"></script>    

    <script>
        d3.json("FieldOfStudies/Statistics", function (data) {
            var w = 300,                        //width
    h = 300,                            //height
    r = 100,                            //radius
    color = d3.scale.category20c();     //builtin range of colors
    console.log(d3.select("#diagram"))
    
    var vis = d3.select("#diagram")
        .append("svg:svg")              //create the SVG element inside the <body>
        .data([data])                   //associate our data with the document
            .attr("width", w)           //set the width and height of our visualization (these will be attributes of the <svg> tag
            .attr("height", h)
        .append("svg:g")                //make a group to hold our pie chart
            .attr("transform", "translate(" + r + "," + r + ")")    //move the center of the pie chart from 0, 0 to radius, radius

    var arc = d3.svg.arc()              //this will create <path> elements for us using arc data
        .outerRadius(r);

    var pie = d3.layout.pie()           //this will create arc data for us given a list of values
        .value(function(d) { return d.value; });    //we must tell it out to access the value of each element in our data array

    var arcs = vis.selectAll("g.slice")     //this selects all <g> elements with class slice (there aren't any yet)
        .data(pie)                          //associate the generated pie data (an array of arcs, each having startAngle, endAngle and value properties) 
        .enter()                            //this will create <g> elements for every "extra" data element that should be associated with a selection. The result is creating a <g> for every object in the data array
            .append("svg:g")                //create a group to hold each slice (we will have a <path> and a <text> element associated with each slice)
                .attr("class", "slice");    //allow us to style things in the slices (like text)

        arcs.append("svg:path")
                .attr("fill", function(d, i) { return color(i); } ) //set the color for each slice to be chosen from the color function defined above
                .attr("d", arc);                                    //this creates the actual SVG path using the associated data (pie) with the arc drawing function

        arcs.append("svg:text")                                     //add a label to each slice
                .attr("transform", function(d) {                    //set the label's origin to the center of the arc
                //we have to make sure to set these before calling arc.centroid
                d.innerRadius = 0;
                d.outerRadius = r;
                return "translate(" + arc.centroid(d) + ")";        //this gives us a pair of coordinates like [50, 50]
            })
            .attr("text-anchor", "middle")                          //center the text on it's origin
            .text(function(d, i) { return data[i].label; });   
            
            });

    </script>
    
}

<h2>ניהול תחומים</h2>

<p>
    <a asp-action="Create">צור תחום חדש</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">עריכה</a> |
                <a asp-action="Details" asp-route-id="@item.Id">פרטים</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">מחיקה</a>
            </td>    
        </tr>
}
    </tbody>
</table>


<div class="container">
    <div class="row">
           
        @foreach (var item in Model)
        { <div class="col-md-4">
              <div class="card-content">
                  <div class="card-desc">
                      <h3>@Html.DisplayFor(modelItem => item.Name)</h3>
                      <a asp-action="Details" asp-route-id="@item.Id" class="btn-card">פרטים</a> 
                      <a asp-controller="Projects" asp-action="FieldOfStudy" asp-route-id="@item.Id" class="btn-card">פרוייקטים</a> 
                  </div>
              </div>
          </div>
            
        }
    </div>
    
    <div id="diagram"></div>

</div>   




